{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/blocks/[id]",
      "regex": "^/api/blocks/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/blocks/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/study-items/[id]",
      "regex": "^/api/study\\-items/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/study\\-items/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/topics/[id]",
      "regex": "^/api/topics/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/topics/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/blocos/[id]",
      "regex": "^/blocos/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/blocos/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/topicos/[id]",
      "regex": "^/topicos/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/topicos/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auth/error",
      "regex": "^/auth/error(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/error(?:/)?$"
    },
    {
      "page": "/auth/signin",
      "regex": "^/auth/signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signin(?:/)?$"
    },
    {
      "page": "/blocos",
      "regex": "^/blocos(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blocos(?:/)?$"
    },
    {
      "page": "/estudo",
      "regex": "^/estudo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/estudo(?:/)?$"
    },
    {
      "page": "/itens",
      "regex": "^/itens(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/itens(?:/)?$"
    },
    {
      "page": "/revisao",
      "regex": "^/revisao(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/revisao(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}